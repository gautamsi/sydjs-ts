/*
	Mixins
	==============================

	Helpers to pump out CSS

	* tile-base
	* fill-space
	* scrollable
	* inline-align
*/



//---------  From Old bootstrap ------

// Opacity

@mixin opacity($opacity) {
    opacity: $opacity;
    // IE8 filter
    $opacity-ie: ($opacity * 100);
    filter: alpha(opacity=$opacity-ie);
  }
  

  // WebKit-style focus

@mixin tab-focus() {
    // Default
    outline: thin dotted;
    // WebKit
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
  }
  
  @mixin square($size) {
    @include size($size, $size);
  }  

//----------


@mixin translateX($value)
{
  -webkit-transform: translateX($value);
      -ms-transform: translateX($value); // IE9 only
       -o-transform: translateX($value);
          transform: translateX($value);
}
@mixin translateY($value)
{
  -webkit-transform: translateY($value);
      -ms-transform: translateY($value); // IE9 only
       -o-transform: translateY($value);
          transform: translateY($value);
}




/*
	Tile base
	------------------------------

	Easily pump out congruent tiles around the site
*/

@mixin tile-base()
{
	background-color: white;
	border-radius: $border-radius-small;
	box-shadow: 0 0 0 1px rgba(0,0,0,0.04), 0 2px 0 rgba(0,0,0,0.04);
}




/*
	Fill Space
	------------------------------

	Element will fill all available vertical and horizontal space provided by it's parent

	Notes:

	* Apply attribute "auto" to either top / bottom if the element has a height
	* Apply attribute "auto" to either left / right if the element has a width

*/
@mixin fill-space($top:0,$right:0,$bottom:0,$left:0)
{
	position: absolute;
	bottom: $bottom;
	left: $left;
	right: $right;
	top: $top;
}





/*
	Scrollable
	------------------------------

	Areas will sometimes lose their ability to scroll when manipulated, particularly iOS.
	This mixin will re-introduce correct scrolling behaviour

	Notes:

	* Use the variables "horizontal, vertical" to indicate which direction you want to be able to scroll

*/
@mixin scrollable($direction)
{
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	-moz-overflow-scrolling: touch;
	-o-overflow-scrolling: touch;
	-ms-overflow-scrolling: touch;
	overflow-scrolling: touch;
}
@mixin scrollable($direction)
{
    @if $direction == horizontal {
        overflow: hidden;
        overflow-x: auto;
    }

    @if $direction == vertical {
        overflow: hidden;
        overflow-y: auto;
    }

}




/*
	Inline align
	------------------------------

	Element will align with it's siblings along a lateral axis

	Notes:

	* Defaults to middle
	* Other options
		- baseline / sub / super / top / text-top / middle / bottom / text-bottom / inherit

*/

@mixin inline-align($alignment:middle)
{
	display: inline-block;
	vertical-align: $alignment;
}




/*
	Button base
	------------------------------

	Easily pump out default styles, as well as :hover, :focus, :active,
	and disabled options for all buttons
*/

@mixin button-base($color, $background, $border)
{
    @include gradient-y( lighten($background,2%), darken($background,2%) );
	color: $color;
	background-color: $background;
	border-color: lighten($border, 5%) $border darken($border, 5%);

	&:hover, &:focus {
        @include gradient-y( lighten($background,5%), darken($background,0%) );
		color: $color;
		background-color: lighten($background, 5%);
		border-color: lighten($border, 10%) lighten($border, 5%) lighten($border, 0%);
	}
	&:active,
	&.active,
	.open .dropdown-toggle & {
		@include box-shadow(inset 0 1px 3px rgba(0,0,0,.125));
		background-image: none;
		background-color: darken($background, 5%);
		border-color: darken($border, 15%) darken($border, 10%) darken($border, 5%);
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&:active,
		&.active {
			background-color: $background;
			border-color: $background;
		}
	}

	.badge {
		color: $background;
		background-color: $color;
	}
}




/*
	Vertical text alignment
	------------------------------

	Allows for dynamic font-size being calculated. The initial goal was to adjust
	line-height when the font-size is changed
*/

@mixin text-hero($font-factor)
{
	font-size: calc(#{$font-size-medium} * #{$font-factor}) !important;
}


// Layers
// -----------------------------------------------------------
@mixin floor { position: relative;}
@mixin ground { z-index: -1; }
@mixin floor-1 { z-index: 1; }
@mixin floor-2 { z-index: 10; }
@mixin floor-3 { z-index: 100; }
@mixin floor-4 { z-index: 110; }
@mixin floor-5 { z-index: 120; }
@mixin floor-6 { z-index: 130; }
@mixin ceiling { z-index: 1000; }